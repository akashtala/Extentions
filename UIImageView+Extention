//
//  UIImageView+Extention.swift
//
//  Created by Akash on 08/04/24.
//

import Foundation
import UIKit
import Kingfisher

extension UIImageView{
    @IBInspectable
    var setGif: String{
        get{
            return ""
        }
        set{
            self.setGif(name: newValue)
        }
    }
    
    func setGif(name: String){
        if let gifURL = Bundle.main.url(forResource: name, withExtension: "gif") {
            let imageResource = KF.ImageResource(downloadURL: gifURL)
            self.kf.setImage(with: imageResource)
        }
    }   

    func enableZoom() {
        let pinchGesture = UIPinchGestureRecognizer(target: self, action: #selector(startZooming(_:)))
        let doubleTapGesture = UITapGestureRecognizer(target: self, action: #selector(handleDoubleTap(_:)))
        doubleTapGesture.numberOfTapsRequired = 2
        isUserInteractionEnabled = true
        addGestureRecognizer(pinchGesture)
        addGestureRecognizer(doubleTapGesture)
        pinchGesture.require(toFail: doubleTapGesture)
    }
    
    @objc private func startZooming(_ sender: UIPinchGestureRecognizer) {
        let scaleResult = sender.view?.transform.scaledBy(x: sender.scale, y: sender.scale)
        guard let scale = scaleResult, scale.a > 1, scale.d > 1 else { return }
        sender.view?.transform = scale
        sender.scale = 1
    }
    
    @objc private func handleDoubleTap(_ sender: UITapGestureRecognizer) {
        if sender.state == .ended {
            let scale: CGFloat = 2.0
            let newTransform = transform.scaledBy(x: scale, y: scale)
            UIView.animate(withDuration: 0.3) {
                self.transform = newTransform
            }
        }
    }
}
