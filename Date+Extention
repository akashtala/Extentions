//
//  UIDate+Extention.swift
//  AnimationPractice
//
//  Created by Akash on 03/04/24.
//

import Foundation

extension Date{
    
    func getTime() -> String{
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "h:mm a"
        let time = dateFormatter.string(from: self)
        return time
    }
    
    func getDate() -> String{
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "dd MMM yyyy"
        let date = dateFormatter.string(from: self)
        return date
    }
    
    func timeAgo() -> String {
        let secondsAgo = Int(Date().timeIntervalSince(self))
        let minute = 60
        let hour = 60 * minute
        let day = 24 * hour
        let month = 30 * day
        let year = 12 * month
        
        if secondsAgo == 0{
            return "Just Now"
        } else if secondsAgo < minute {
            return "\(secondsAgo) seconds ago"
        } else if secondsAgo < hour {
            let minutes = secondsAgo / minute
            return "\(minutes) minute\(minutes == 1 ? "" : "s") ago"
        } else if secondsAgo < day {
            let hours = secondsAgo / hour
            return "\(hours) hour\(hours == 1 ? "" : "s") ago"
        } else if secondsAgo < month {
            let days = secondsAgo / day
            return "\(days) day\(days == 1 ? "" : "s") ago"
        } else if secondsAgo < year {
            let months = secondsAgo / month
            return "\(months) month\(months == 1 ? "" : "s") ago"
        } else {
            let years = secondsAgo / year
            return "\(years) year\(years == 1 ? "" : "s") ago"
        }
    }
    
    func toString(timeZone: String) -> String {
        let dateFormatter = DateFormatter()
        dateFormatter.timeZone = TimeZone(identifier: timeZone)
        dateFormatter.dateFormat = "yyyy-MM-dd HH:mm a"
        return dateFormatter.string(from: self)
    }
}
